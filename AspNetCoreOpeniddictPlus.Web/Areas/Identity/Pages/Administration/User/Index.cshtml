@page
@model AspNetCoreOpeniddictPlus.Web.Areas.Identity.Pages.Administration.User.Index;

<div class="flex flex-col justify-center items-center mx-auto max-w-screen-xl">
    <div class="w-full bg-white shadow-md rounded-lg p-6">
        <h1 class="text-2xl font-medium pb-3">User management</h1>
        <div class="flex items-center justify-between pt-3 pb-5">
            <form>
                <label for="search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
                <div class="relative">
                    <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
                        <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
                        </svg>
                    </div>
                    <input type="search" id="search"
                           class="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search user..."  />
                    <button type="submit" class="text-white absolute end-2.5 bottom-2.5 bg-gray-700 hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Search</button>
                </div>
            </form>
            <a asp-area="Identity" asp-page="/Administration/User/Create"
               class="flex items-center space-x-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
                </svg>
                <span>Create user</span>
            </a>
        </div>

        <partial name="Account/Manage/_StatusMessage" model="@Model.StatusMessage"/>

            @if (Model.Users is not null)
            {
                <table class="table-auto border-collapse border border-gray-300 w-full text-left text-sm text-gray-500 dark:text-gray-400">
                    <thead class="bg-gray-200 text-xs  text-gray-700 dark:bg-gray-700 dark:text-gray-300">
                    <tr>
                        @foreach (var column in Model.Columns)
                        {
                            <th class="border border-gray-300 px-4 py-2 dark:border-gray-600">
                                @column.Header
                            </th>
                        }
                    </tr>
                    </thead>
                    <tbody class="bg-white dark:bg-gray-800 userTableTdRef">
                    @if (Model.Users.TotalCount > 0)
                    {
                        @foreach (var item in Model.Users.Items)
                        {
                            <tr class="hover:bg-gray-100 dark:hover:bg-gray-700 ">
                                @foreach (var column in Model.Columns)
                                {
                                    <td class="border border-gray-300 px-4 py-2 dark:border-gray-600">
                                        <span class="inline-flex items-center space-x-2">
                                            @column.Template(item)
                                        </span>
                                    </td>
                                }
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td class="border border-gray-300 px-4 py-2 text-center text-gray-500 dark:border-gray-600 dark:text-gray-400" colspan="@Model.Columns.Count">
                                No data available
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }

            @if (Model.Users is { HasNextPage: true })
            {
                await Html.RenderPartialAsync("Shared/_PaginationPartial", Model.Pagination);
            }
        </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        window.onload = function () {
            const userTableHeaderRefs = document.querySelector('.userTableTdRef').children
            if (userTableHeaderRefs) {
                Array.from(userTableHeaderRefs).forEach((userTableHeaderRef) => {
                    userTableHeaderRef.addEventListener("click", function (e) {
                        console.log(e.target, "target");
                        const userId = e.target.getAttribute('data-user-id');
                        if (!userId) return;
                        window.location.href = `/Identity/Administration/User/Edit/?userId=${userId}`;

                    });
                });
            }

           
        }
    </script>
}


